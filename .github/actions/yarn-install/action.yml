name: Yarn Install
description: Runs yarn install using caching with monorepo support

inputs:
  cache-prefix:
    description: The prefix to use for all cache keys
    required: true

outputs:
  cache-hit:
    description: Whether the node_modules cache got an exact cache hit
    value: ${{ steps.cache-modules.outputs.cache-hit }}
  yarn-cache-dir:
    description: The location of the global yarn cache
    value: ${{ steps.yarn-cache.outputs.dir }}

runs:
  using: 'composite'
  steps:
    - name: Cache Local Modules
      id: cache-modules
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ inputs.cache-prefix }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json', '.yarn/releases/**') }}

    - name: Get Yarn Cache Directory
      id: yarn-cache
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        CACHE_PATH="$(yarn config get cacheFolder)"
        echo "dir=${CACHE_PATH}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Global Modules
      uses: actions/cache@v3
      if: steps.cache-modules.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ inputs.cache-prefix }}-yarn-${{ hashFiles('yarn.lock', '.yarn/releases/**') }}
        restore-keys: |
          ${{ inputs.cache-prefix }}-yarn-

    - name: Install Dependencies
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: yarn install --immutable
      shell: bash
