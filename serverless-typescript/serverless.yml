service: serverless-typescript

plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'eu-west-1'}
  deploymentMethod: direct
  tracing:
    apiGateway: true
  logs:
    restApi:
      accessLogging: true
      format: "requestId: $context.requestId, ip: $context.identity.sourceIp, caller: $context.identity.caller, user: $context.identity.user, requestTime: $context.requestTime, httpMethod: $context.httpMethod, resourcePath: $context.resourcePath, status: $context.status, protocol: $context.protocol, responseLength: $context.responseLength, integrationLatency: $context.integrationLatency, authorizerIntegrationLatency: $context.authorizer.integrationLatency, responseLatency: $context.responseLatency"
  deploymentBucket:
    blockPublicAccess: true

package:
  excludeDevDependencies: true
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false

functions:
  healthcheck:
    handler: src/functions/healthcheck.handler
    description: Healthcheck to verify the service is up and running
    events:
      - http:
          path: status
          method: get
